from tensorflow.keras.datasets import mnist
from keras.utils import to_categorical
from keras.models import Sequential
from keras.layers import Dense
import matplotlib.pyplot as plt


(x_train, labels_train), (x_test, labels_test) = mnist.load_data()

x_train = x_train.astype('float32')
x_test = x_test.astype('float32')
x_train /= 255
x_test /= 255


y_train = to_categorical(labels_train, 10)
y_test = to_categorical(labels_test, 10)


x_train = x_train.reshape(60000, 784)
x_test = x_test.reshape(10000, 784)


net = Sequential()
net.add(Dense(800, activation = 'relu', input_shape=(784,)))
net.add(Dense(400, activation = 'relu'))
net.add(Dense(10, activation = 'softmax'))

net.compile(loss='categorical_crossentropy', optimizer='adam')
history = net.fit(x_train, y_train, validation_data=(x_test, y_test), epochs=10, batch_size=256, verbose =1)

plt.figure()
plt.plot(history.history['loss'], label='training loss')
plt.plot(history.history['val_loss'], label='validation loss')
plt.xlabel('epochs')
plt.ylabel('loss')
plt.legend()

